server:
  port: 8080
spring:
  quartz:
      job-store-type: jdbc
      jdbc:
        initialize-schema: always
      properties:
        org:
          quartz:
            jobStore:
              driverDelegateClass: org.quartz.impl.jdbcjobstore.PostgreSQLDelegate
            dataSource: quartzDataSource
            class: org.quartz.impl.jdbcjobstore.JobStoreTX
  jackson:
    serialization:
      FAIL_ON_EMPTY_BEANS: false
  datasource:
    url: jdbc:postgresql://database.cusdxsftolnc.eu-north-1.rds.amazonaws.com:5432/campaign-manager?ssl=false
    username: postgres
    password: '{cipher}fba63a19a3d34401af3ebecd4aae46245cbbc632b937497aad598dfff2e8bdee1abd1896124cd1727b12beb420c58a56'
  jpa:
    properties:
      hibernate:
        enable_lazy_load_no_trans: true
        generate_statistics: false
    show-sql: false
amazon:
  accessKey: '{cipher}0c86cc7bd3f45eee7497fba64e26e06388d881ab646f719e2ab1aa90b1eb40b9ae2014040ace2f968712c1980cfecc51'
  secretKey: '{cipher}14517e673e5a9fa034b42cc86e6f23aef2d2fdd138698d07db3697d049ff00648102b7e6f77567c5d482882b275167e3633391d0bcba02aa8045331e31d9be06'
  bucketName: influencers-dev-multimedia-manager
  region: eu-north-1

profiles:
  url: http://profiles
  brands-by-name: /api/v1/brands/by-name/{name}
  confirmed-influencers: /api/v1/confirmed-influencers
notifications:
  url: http://notification-service
  email-url: /api/v1/emails
  push-url: /api/v1/notifications
  approve-request: /api/v1/notifications/{requestId}/approve-campaign-request
  is-exists-approve-campaign-request: /api/v1/notifications/{requestId}/is-exists-approve-campaign-push
