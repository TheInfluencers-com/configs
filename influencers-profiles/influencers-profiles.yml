server:
  forward-headers-strategy: framework
  connection-timeout: 5s
spring:
  data.rest.base-path: api/v1
  datasource:
    url: jdbc:postgresql://localhost:5432/influencers-profiles?ssl=false
    username: user
    password: password
  jpa:
    properties:
      hibernate:
        generate_statistics: true
        cache:
          use_second_level_cache: false
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
external-hal-links:
  influencers:
    influencerCampaigns: /api/v1/campaigns/search/by-influencer{?influencerId,lifecycleStatus,page,size,sort}
    searchPublicBriefs: /api/v1/briefs/search/by-brand-price{?brandId,minPrice,maxPrice,isForEveryone,page,size,sort}
    briefRequests: /api/v1/briefs/search/by-influencer-lcs{?influencerId,lifecycleStatus,page,size,sort}
    publishedPitches: /api/v1/pitches/search/by-influencer-lcs{?influencerId,lifecycleStatus,page,size,sort}
    pitchesCount: /api/v1/count/me/pitches
    campaignsCount: /api/v1/count/me/campaigns
  brands:
    briefRequests: /api/v1/briefs/search/by-brand-lcs{?brandId,lifecycleStatus,page,size,sort}
    brandCampaigns: /api/v1/campaigns/search/by-brand{?brandId,lifecycleStatus,page,size,sort}
    pitchRequests: /api/v1/pitches/search/by-brand-lcs{?brandId,lifecycleStatus,page,size,sort}
campaigns:
  url: http://localhost:8086
  user-info-bulk: /api/v1/user-info-bulk
  recent-brands: /api/v1/campaigns/search/recent-brands
  portfolio: /api/v1/campaigns/search/portfolio
  by-ids: /api/v1/campaigns/search/by-ids
  count-by-influencer: /api/v1/campaigns/search/count-by-influencer
notifications:
  url: http://localhost:9095
  push-url: /api/v1/notifications
  type-url: /api/v1/notifications/{id}/change-type
  send-message: /api/v1/chat/{chat_id}/user/{user_id}/message/send
  get-interlocutor: /api/v1/chat/{chat_id}/user/{user_id}/get-interlocutor
  delete-mood-notifications: /api/v1/notifications/choose-influencer-mood/{userId}
  support-email: "hello@theinfluencers.com"
  email-templates:
    support-template: "d-1fa1c40919e3412fae2e22e8ece535a0"
  admin-emails: "[gladiy.pavlo@gmail.com, liubomyr.nych@gmail.com]"
management:
  endpoints:
    web:
      exposure:
        include: '*'
springdoc.api-docs.path: /api/v1/profiles/api-doc
health:
  config:
    enabled: false
logging:
  file:
    name: logs/app.log
  level:
    com.agenatech: DEBUG
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS: false

keycloak:
  url: https://authentication.theinfluencers.com
  client:
    id: admin-cli
    secret: '{cipher}9d552e317f16b9e3305b33eca67cc7b7c14450c7c7a4f5b69a6baa6cfc2b3bbce812f5d092aaff539cbb25993c2d7c728959844b59d03c8cc6d612b2a28402d9'
platforms:
  instagram:
    url: https://graph.facebook.com/v22.0
    client:
      id: 1796303811161347
      secret: '{cipher}0a7c5a19908c9674331dcb1bef01060cbcbf798d93f5ef7c1ca4ec7d3a145663295764e30a48ee70168f62559b6e5888c19255f273525c118dcba9c3a3b79bc4'
    webhook:
      verify-token: '{cipher}803143b42928392a6c0832c629c452b61025c28e327b967d283ff43ffaa54535'
