server:
  forward-headers-strategy: framework
  connection-timeout: 5s
spring:
  data.rest.base-path: api/v1
  datasource:
    url: jdbc:postgresql://localhost:5432/influencers-profiles?ssl=false
    username: user
    password: password
  jpa:
    properties:
      hibernate:
        generate_statistics: true
        cache:
          use_second_level_cache: false
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
    show-sql: true
    hibernate:
      ddl-auto: update
      naming-strategy: org.hibernate.cfg.ImprovedNamingStrategy
external-hal-links:
  influencers:
    influencerCampaigns: /api/v1/campaigns/search/by-influencer{?influencerId,lifecycleStatus,page,size,sort}
    searchPublicBriefs: /api/v1/briefs/search/by-brand-price{?brandId,minPrice,maxPrice,isForEveryone,page,size,sort}
    briefRequests: /api/v1/briefs/search/by-influencer-lcs{?influencerId,lifecycleStatus,page,size,sort}
    publishedPitches: /api/v1/pitches/search/by-influencer-lcs{?influencerId,lifecycleStatus,page,size,sort}
    pitchesCount: /api/v1/count/me/pitches
    campaignsCount: /api/v1/count/me/campaigns
  brands:
    briefRequests: /api/v1/briefs/search/by-brand-lcs{?brandId,lifecycleStatus,page,size,sort}
    brandCampaigns: /api/v1/campaigns/search/by-brand{?brandId,lifecycleStatus,page,size,sort}
    pitchRequests: /api/v1/pitches/search/by-brand-lcs{?brandId,lifecycleStatus,page,size,sort}
campaigns:
  url: http://localhost:8086
notifications:
  url: http://localhost:9095
  push-url: /api/v1/notifications
  type-url: /api/v1/notifications/{id}/change-type
  support-email: "hello@theinfluencers.com"
  email-templates:
    support-template: "d-1fa1c40919e3412fae2e22e8ece535a0"
  admin-emails: "[gladiy.pavlo@gmail.com, liubomyr.nych@gmail.com]"
management:
  endpoints:
    web:
      exposure:
        include: '*'
springdoc.api-docs.path: /api/v1/profiles/api-doc
health:
  config:
    enabled: false
logging:
  level:
    com.agenatech: DEBUG
spring.jackson.serialization.FAIL_ON_EMPTY_BEANS: false